server.port=8021

#==========================================健康检查actuator=========================================================
#用于指定配置可访问健康监控另一个端口（唯一入口）（基于防火墙，只允许指定入口，如使用内网，或办公环境，指定那些端口对外使用，哪些对内使用） 防止健康检查url默认入口暴露出去，
#具体其他配置，可查看官网
management.port=8092 
#=========================================================================================================
#配置mysql数据库连接 springboot会默认启用tomcat链接池数  tomcajdbc已经被springboot引进进来了，带有连接池
#spring.datasource.url=jdbc:mysql://localhost:3306/housedanti?characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#=======================================使用druid外部连接池==================================================================
#使用druid第二步
#配置mysql数据库连接 使用druid外部连接池  Druid是Java语言中最好的数据库连接池。Druid能够提供强大的监控和扩展功能。阿里提供的
spring.druid.driverClassName=com.mysql.jdbc.Driver
#加上amp可以防止乱码
spring.druid.url=jdbc:mysql://127.0.0.1:3306/housedanti?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;amp;zeroDateTimeBehavior=convertToNull
spring.druid.username=root
spring.druid.password=root
#druid\u75311.0.16\u5347\u7ea7\u52301.1.0,\u8fde\u63a5\u6c60\u914d\u7f6e\u8981\u6539\u6210maxActive,minIdle
#最大连接池数量
spring.druid.maxActive=30
#已经不再使用，配置了也没效果  最小连接数
spring.druid.minIdle=5
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.druid.maxWait=10000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.druid.validationQuery=SELECT 'x'
#空闲链接检查时间间隔  就是将空闲链接剔除 默认配置 可以不用配置
spring.druid.timeBetweenEvictionRunsMillis=60000
#空间连接最小空闲时间  大于最小时间，就可以去剔除了  默认配置 可以不用配置
spring.druid.minEvictableIdleTimeMillis=30000

#=====================================加载mybatis配置文件====================================================================

mybatis.config-location=classpath:/mybatis/mybatis-config.xml

#==================================整合配置freemaeker第二步=======================================================================
#设置freemarker编码
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html;charset=UTF-8
#配置后暴露出一些参数就不需要在设置到model中了
spring.freemarker.expose-request-attributes=true
#配置session信息,把session的属性与暴露出来 这样session的属性就可以当做一个变量，在freemarker引擎中渲染出来
spring.freemarker.expose-session-attributes=true
#将宏的一些属性也暴露出来
spring.freemarker.expose-spring-macro-helpers=true
#配置freemarker视图解析器 设置扫描文件后缀
spring.freemarker.suffix=.ftl
#设置下datetime格式
spring.freemarker.settings.datetime_format=yyyy-MM-dd HH:mm:ss
#设置编码
spring.freemarker.settings.default_encoding=UTF-8
#由于springboot中并没有集成freemarker的自动导入和自动包含属性，所以只能自己加载进入相关的配置
#这个表示每个freemarker的视图页面都会自动引入这个ftl文件。里面定义的就是一些宏，如text文本框，各种form元素
#要引入宏文件要配置如下 freemarker会识别ftl为宏文件,而不是简单的freemarker文件
spring.freemarker.settings.auto_import=common/common.ftl as common

#配置sql日志打印
logging.level.com.mooc.house.biz.mapper=DEBUG
#文件路径
file.path=/Users/wangjialuo/opt/imgs

#\u9759\u6001\u8d44\u6e90\u5730\u5740\u524d\u7f00(\u82e5\u672c\u5730\u5b89\u88c5\u4e86nginx\u670d\u52a1\u5668,\u5f00\u542f\u5982\u4e0b\u914d\u7f6e)
file.prefix=http://127.0.0.1:8081/images
#搭建spring Admin监控平台（可视化平台，而健康检查actuator 是监控url）
#我们单独创建spring Admin springBoot项目 创建一个server服务
#配置监控品台地址
spring.boot.admin.url=http://localhost:8070
#f发送邮件域名（以本地为例）
domain.name=127.0.0.1:8081

spring.mail.host=smtp.163.com
spring.mail.username=spring_boot@163.com
spring.mail.password=abc123455
#认证
spring.mail.properties.mail.smtp.auth=true
#加密通信
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true


#sprinboot日志管理-多彩输出
#如果你的终端支持ANSI，设置彩色输出会让日志更具可读性。通过在application.properties中设置spring.output.ansi.enabled参数来支持。
#NEVER：禁用ANSI-colored输出（默认项）
#DETECT：会检查终端是否支持ANSI，是的话就采用彩色输出（推荐项）
#ALWAYS：总是使用ANSI-colored格式输出，若终端不支持的时候，会有很多干扰信息，不推荐使用
spring.output.ansi.enabled=always